syntax = "proto3";
package project;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/v1beta1/coin.proto";
import "project/project.proto";

option go_package = "github.com/ixofoundation/ixo-blockchain/x/project/types";

service Query {
  rpc ProjectDoc(QueryProjectDocRequest) returns (QueryProjectDocResponse){
    option (google.api.http).get = "/ixo/project/{project_did}"; //this is a REST endpoint - see Query service here https://docs.cosmos.network/master/migrations/app_and_modules.html
  }

  rpc ProjectAccounts(QueryProjectAccountsRequest) returns (QueryProjectAccountsResponse){
    option (google.api.http).get = "/ixo/projectAccounts/{project_did}"; //this is a REST endpoint - see Query service here https://docs.cosmos.network/master/migrations/app_and_modules.html
  }

  rpc ProjectTx(QueryProjectTxRequest) returns (QueryProjectTxResponse){
    option (google.api.http).get = "/ixo/projectTxs/{project_did}"; //this is a REST endpoint - see Query service here https://docs.cosmos.network/master/migrations/app_and_modules.html
  }

  rpc Params(QueryParamsRequest) returns (QueryParamsResponse){
    option (google.api.http).get = "/ixo/projectParams"; //this is a REST endpoint - see Query service here https://docs.cosmos.network/master/migrations/app_and_modules.html
  }
}

message QueryProjectDocRequest {
  string project_did = 1;
}

message QueryProjectDocResponse {
  ProjectDoc project_doc = 1;
}

message QueryProjectAccountsRequest {
  string project_did = 1;
}

message QueryProjectAccountsResponse {
  map<string, string> account_map = 1;
}

message QueryProjectTxRequest {
  string project_did = 1;
}

message QueryProjectTxResponse {
  repeated WithdrawalInfoDoc txs = 1;
}

message QueryParamsRequest {}

message QueryParamsResponse {
  Params params = 1 [(gogoproto.nullable) = false];
}


// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: payments/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	types "github.com/cosmos/cosmos-sdk/codec/types"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgSetPaymentContractAuthorisation struct {
	PaymentContractId string `protobuf:"bytes,1,opt,name=payment_contract_id,json=paymentContractId,proto3" json:"payment_contract_id,omitempty"`
	PayerDid          string `protobuf:"bytes,2,opt,name=payer_did,json=payerDid,proto3" json:"payer_did,omitempty"`
	Authorised        bool   `protobuf:"varint,3,opt,name=authorised,proto3" json:"authorised,omitempty"`
}

func (m *MsgSetPaymentContractAuthorisation) Reset()      { *m = MsgSetPaymentContractAuthorisation{} }
func (*MsgSetPaymentContractAuthorisation) ProtoMessage() {}
func (*MsgSetPaymentContractAuthorisation) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc609bb157024200, []int{0}
}
func (m *MsgSetPaymentContractAuthorisation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetPaymentContractAuthorisation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetPaymentContractAuthorisation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetPaymentContractAuthorisation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetPaymentContractAuthorisation.Merge(m, src)
}
func (m *MsgSetPaymentContractAuthorisation) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetPaymentContractAuthorisation) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetPaymentContractAuthorisation.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetPaymentContractAuthorisation proto.InternalMessageInfo

func (m *MsgSetPaymentContractAuthorisation) GetPaymentContractId() string {
	if m != nil {
		return m.PaymentContractId
	}
	return ""
}

func (m *MsgSetPaymentContractAuthorisation) GetPayerDid() string {
	if m != nil {
		return m.PayerDid
	}
	return ""
}

func (m *MsgSetPaymentContractAuthorisation) GetAuthorised() bool {
	if m != nil {
		return m.Authorised
	}
	return false
}

type MsgSetPaymentContractAuthorisationResponse struct {
}

func (m *MsgSetPaymentContractAuthorisationResponse) Reset() {
	*m = MsgSetPaymentContractAuthorisationResponse{}
}
func (m *MsgSetPaymentContractAuthorisationResponse) String() string {
	return proto.CompactTextString(m)
}
func (*MsgSetPaymentContractAuthorisationResponse) ProtoMessage() {}
func (*MsgSetPaymentContractAuthorisationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc609bb157024200, []int{1}
}
func (m *MsgSetPaymentContractAuthorisationResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetPaymentContractAuthorisationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetPaymentContractAuthorisationResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetPaymentContractAuthorisationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetPaymentContractAuthorisationResponse.Merge(m, src)
}
func (m *MsgSetPaymentContractAuthorisationResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetPaymentContractAuthorisationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetPaymentContractAuthorisationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetPaymentContractAuthorisationResponse proto.InternalMessageInfo

type MsgCreatePaymentTemplate struct {
	CreatorDid      string          `protobuf:"bytes,1,opt,name=creator_did,json=creatorDid,proto3" json:"creator_did,omitempty"`
	PaymentTemplate PaymentTemplate `protobuf:"bytes,2,opt,name=payment_template,json=paymentTemplate,proto3" json:"payment_template"`
}

func (m *MsgCreatePaymentTemplate) Reset()      { *m = MsgCreatePaymentTemplate{} }
func (*MsgCreatePaymentTemplate) ProtoMessage() {}
func (*MsgCreatePaymentTemplate) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc609bb157024200, []int{2}
}
func (m *MsgCreatePaymentTemplate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatePaymentTemplate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatePaymentTemplate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatePaymentTemplate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatePaymentTemplate.Merge(m, src)
}
func (m *MsgCreatePaymentTemplate) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatePaymentTemplate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatePaymentTemplate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatePaymentTemplate proto.InternalMessageInfo

func (m *MsgCreatePaymentTemplate) GetCreatorDid() string {
	if m != nil {
		return m.CreatorDid
	}
	return ""
}

func (m *MsgCreatePaymentTemplate) GetPaymentTemplate() PaymentTemplate {
	if m != nil {
		return m.PaymentTemplate
	}
	return PaymentTemplate{}
}

type MsgCreatePaymentTemplateResponse struct {
}

func (m *MsgCreatePaymentTemplateResponse) Reset()         { *m = MsgCreatePaymentTemplateResponse{} }
func (m *MsgCreatePaymentTemplateResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreatePaymentTemplateResponse) ProtoMessage()    {}
func (*MsgCreatePaymentTemplateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc609bb157024200, []int{3}
}
func (m *MsgCreatePaymentTemplateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatePaymentTemplateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatePaymentTemplateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatePaymentTemplateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatePaymentTemplateResponse.Merge(m, src)
}
func (m *MsgCreatePaymentTemplateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatePaymentTemplateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatePaymentTemplateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatePaymentTemplateResponse proto.InternalMessageInfo

type MsgCreatePaymentContract struct {
	CreatorDid        string                                  `protobuf:"bytes,1,opt,name=creator_did,json=creatorDid,proto3" json:"creator_did,omitempty"`
	PaymentTemplateId string                                  `protobuf:"bytes,2,opt,name=payment_template_id,json=paymentTemplateId,proto3" json:"payment_template_id,omitempty"`
	PaymentContractId string                                  `protobuf:"bytes,3,opt,name=payment_contract_id,json=paymentContractId,proto3" json:"payment_contract_id,omitempty"`
	Payer             string                                  `protobuf:"bytes,4,opt,name=payer,proto3" json:"payer,omitempty"`
	Recipients        []DistributionShare                     `protobuf:"bytes,5,rep,name=recipients,proto3" json:"recipients"`
	CanDeauthorise    bool                                    `protobuf:"varint,6,opt,name=can_deauthorise,json=canDeauthorise,proto3" json:"can_deauthorise,omitempty"`
	DiscountId        github_com_cosmos_cosmos_sdk_types.Uint `protobuf:"bytes,7,opt,name=discount_id,json=discountId,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Uint" json:"discount_id"`
}

func (m *MsgCreatePaymentContract) Reset()      { *m = MsgCreatePaymentContract{} }
func (*MsgCreatePaymentContract) ProtoMessage() {}
func (*MsgCreatePaymentContract) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc609bb157024200, []int{4}
}
func (m *MsgCreatePaymentContract) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatePaymentContract) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatePaymentContract.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatePaymentContract) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatePaymentContract.Merge(m, src)
}
func (m *MsgCreatePaymentContract) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatePaymentContract) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatePaymentContract.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatePaymentContract proto.InternalMessageInfo

func (m *MsgCreatePaymentContract) GetCreatorDid() string {
	if m != nil {
		return m.CreatorDid
	}
	return ""
}

func (m *MsgCreatePaymentContract) GetPaymentTemplateId() string {
	if m != nil {
		return m.PaymentTemplateId
	}
	return ""
}

func (m *MsgCreatePaymentContract) GetPaymentContractId() string {
	if m != nil {
		return m.PaymentContractId
	}
	return ""
}

func (m *MsgCreatePaymentContract) GetPayer() string {
	if m != nil {
		return m.Payer
	}
	return ""
}

func (m *MsgCreatePaymentContract) GetRecipients() []DistributionShare {
	if m != nil {
		return m.Recipients
	}
	return nil
}

func (m *MsgCreatePaymentContract) GetCanDeauthorise() bool {
	if m != nil {
		return m.CanDeauthorise
	}
	return false
}

type MsgCreatePaymentContractResponse struct {
}

func (m *MsgCreatePaymentContractResponse) Reset()         { *m = MsgCreatePaymentContractResponse{} }
func (m *MsgCreatePaymentContractResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreatePaymentContractResponse) ProtoMessage()    {}
func (*MsgCreatePaymentContractResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc609bb157024200, []int{5}
}
func (m *MsgCreatePaymentContractResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatePaymentContractResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatePaymentContractResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatePaymentContractResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatePaymentContractResponse.Merge(m, src)
}
func (m *MsgCreatePaymentContractResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatePaymentContractResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatePaymentContractResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatePaymentContractResponse proto.InternalMessageInfo

type MsgCreateSubscription struct {
	CreatorDid        string                                  `protobuf:"bytes,1,opt,name=creator_did,json=creatorDid,proto3" json:"creator_did,omitempty"`
	SubscriptionId    string                                  `protobuf:"bytes,2,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	PaymentContractId string                                  `protobuf:"bytes,3,opt,name=payment_contract_id,json=paymentContractId,proto3" json:"payment_contract_id,omitempty"`
	MaxPeriods        github_com_cosmos_cosmos_sdk_types.Uint `protobuf:"bytes,4,opt,name=max_periods,json=maxPeriods,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Uint" json:"max_periods"`
	Period            *types.Any                              `protobuf:"bytes,5,opt,name=period,proto3" json:"period,omitempty"`
}

func (m *MsgCreateSubscription) Reset()      { *m = MsgCreateSubscription{} }
func (*MsgCreateSubscription) ProtoMessage() {}
func (*MsgCreateSubscription) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc609bb157024200, []int{6}
}
func (m *MsgCreateSubscription) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSubscription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSubscription.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSubscription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSubscription.Merge(m, src)
}
func (m *MsgCreateSubscription) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSubscription) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSubscription.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSubscription proto.InternalMessageInfo

type MsgCreateSubscriptionResponse struct {
}

func (m *MsgCreateSubscriptionResponse) Reset()         { *m = MsgCreateSubscriptionResponse{} }
func (m *MsgCreateSubscriptionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSubscriptionResponse) ProtoMessage()    {}
func (*MsgCreateSubscriptionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc609bb157024200, []int{7}
}
func (m *MsgCreateSubscriptionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSubscriptionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSubscriptionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSubscriptionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSubscriptionResponse.Merge(m, src)
}
func (m *MsgCreateSubscriptionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSubscriptionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSubscriptionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSubscriptionResponse proto.InternalMessageInfo

type MsgGrantDiscount struct {
	SenderDid         string                                  `protobuf:"bytes,1,opt,name=sender_did,json=senderDid,proto3" json:"sender_did,omitempty"`
	PaymentContractId string                                  `protobuf:"bytes,2,opt,name=payment_contract_id,json=paymentContractId,proto3" json:"payment_contract_id,omitempty"`
	DiscountId        github_com_cosmos_cosmos_sdk_types.Uint `protobuf:"bytes,3,opt,name=discount_id,json=discountId,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Uint" json:"discount_id"`
	Recipient         string                                  `protobuf:"bytes,4,opt,name=recipient,proto3" json:"recipient,omitempty"`
}

func (m *MsgGrantDiscount) Reset()      { *m = MsgGrantDiscount{} }
func (*MsgGrantDiscount) ProtoMessage() {}
func (*MsgGrantDiscount) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc609bb157024200, []int{8}
}
func (m *MsgGrantDiscount) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGrantDiscount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGrantDiscount.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGrantDiscount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGrantDiscount.Merge(m, src)
}
func (m *MsgGrantDiscount) XXX_Size() int {
	return m.Size()
}
func (m *MsgGrantDiscount) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGrantDiscount.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGrantDiscount proto.InternalMessageInfo

func (m *MsgGrantDiscount) GetSenderDid() string {
	if m != nil {
		return m.SenderDid
	}
	return ""
}

func (m *MsgGrantDiscount) GetPaymentContractId() string {
	if m != nil {
		return m.PaymentContractId
	}
	return ""
}

func (m *MsgGrantDiscount) GetRecipient() string {
	if m != nil {
		return m.Recipient
	}
	return ""
}

type MsgGrantDiscountResponse struct {
}

func (m *MsgGrantDiscountResponse) Reset()         { *m = MsgGrantDiscountResponse{} }
func (m *MsgGrantDiscountResponse) String() string { return proto.CompactTextString(m) }
func (*MsgGrantDiscountResponse) ProtoMessage()    {}
func (*MsgGrantDiscountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc609bb157024200, []int{9}
}
func (m *MsgGrantDiscountResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGrantDiscountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGrantDiscountResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGrantDiscountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGrantDiscountResponse.Merge(m, src)
}
func (m *MsgGrantDiscountResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgGrantDiscountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGrantDiscountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGrantDiscountResponse proto.InternalMessageInfo

type MsgRevokeDiscount struct {
	SenderDid         string `protobuf:"bytes,1,opt,name=sender_did,json=senderDid,proto3" json:"sender_did,omitempty"`
	PaymentContractId string `protobuf:"bytes,2,opt,name=payment_contract_id,json=paymentContractId,proto3" json:"payment_contract_id,omitempty"`
	Holder            string `protobuf:"bytes,3,opt,name=holder,proto3" json:"holder,omitempty"`
}

func (m *MsgRevokeDiscount) Reset()      { *m = MsgRevokeDiscount{} }
func (*MsgRevokeDiscount) ProtoMessage() {}
func (*MsgRevokeDiscount) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc609bb157024200, []int{10}
}
func (m *MsgRevokeDiscount) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRevokeDiscount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRevokeDiscount.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRevokeDiscount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRevokeDiscount.Merge(m, src)
}
func (m *MsgRevokeDiscount) XXX_Size() int {
	return m.Size()
}
func (m *MsgRevokeDiscount) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRevokeDiscount.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRevokeDiscount proto.InternalMessageInfo

func (m *MsgRevokeDiscount) GetSenderDid() string {
	if m != nil {
		return m.SenderDid
	}
	return ""
}

func (m *MsgRevokeDiscount) GetPaymentContractId() string {
	if m != nil {
		return m.PaymentContractId
	}
	return ""
}

func (m *MsgRevokeDiscount) GetHolder() string {
	if m != nil {
		return m.Holder
	}
	return ""
}

type MsgRevokeDiscountResponse struct {
}

func (m *MsgRevokeDiscountResponse) Reset()         { *m = MsgRevokeDiscountResponse{} }
func (m *MsgRevokeDiscountResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRevokeDiscountResponse) ProtoMessage()    {}
func (*MsgRevokeDiscountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc609bb157024200, []int{11}
}
func (m *MsgRevokeDiscountResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRevokeDiscountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRevokeDiscountResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRevokeDiscountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRevokeDiscountResponse.Merge(m, src)
}
func (m *MsgRevokeDiscountResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRevokeDiscountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRevokeDiscountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRevokeDiscountResponse proto.InternalMessageInfo

type MsgEffectPayment struct {
	SenderDid         string `protobuf:"bytes,1,opt,name=sender_did,json=senderDid,proto3" json:"sender_did,omitempty"`
	PaymentContractId string `protobuf:"bytes,2,opt,name=payment_contract_id,json=paymentContractId,proto3" json:"payment_contract_id,omitempty"`
}

func (m *MsgEffectPayment) Reset()      { *m = MsgEffectPayment{} }
func (*MsgEffectPayment) ProtoMessage() {}
func (*MsgEffectPayment) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc609bb157024200, []int{12}
}
func (m *MsgEffectPayment) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgEffectPayment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgEffectPayment.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgEffectPayment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEffectPayment.Merge(m, src)
}
func (m *MsgEffectPayment) XXX_Size() int {
	return m.Size()
}
func (m *MsgEffectPayment) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEffectPayment.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEffectPayment proto.InternalMessageInfo

func (m *MsgEffectPayment) GetSenderDid() string {
	if m != nil {
		return m.SenderDid
	}
	return ""
}

func (m *MsgEffectPayment) GetPaymentContractId() string {
	if m != nil {
		return m.PaymentContractId
	}
	return ""
}

type MsgEffectPaymentResponse struct {
}

func (m *MsgEffectPaymentResponse) Reset()         { *m = MsgEffectPaymentResponse{} }
func (m *MsgEffectPaymentResponse) String() string { return proto.CompactTextString(m) }
func (*MsgEffectPaymentResponse) ProtoMessage()    {}
func (*MsgEffectPaymentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc609bb157024200, []int{13}
}
func (m *MsgEffectPaymentResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgEffectPaymentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgEffectPaymentResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgEffectPaymentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEffectPaymentResponse.Merge(m, src)
}
func (m *MsgEffectPaymentResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgEffectPaymentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEffectPaymentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEffectPaymentResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgSetPaymentContractAuthorisation)(nil), "payments.MsgSetPaymentContractAuthorisation")
	proto.RegisterType((*MsgSetPaymentContractAuthorisationResponse)(nil), "payments.MsgSetPaymentContractAuthorisationResponse")
	proto.RegisterType((*MsgCreatePaymentTemplate)(nil), "payments.MsgCreatePaymentTemplate")
	proto.RegisterType((*MsgCreatePaymentTemplateResponse)(nil), "payments.MsgCreatePaymentTemplateResponse")
	proto.RegisterType((*MsgCreatePaymentContract)(nil), "payments.MsgCreatePaymentContract")
	proto.RegisterType((*MsgCreatePaymentContractResponse)(nil), "payments.MsgCreatePaymentContractResponse")
	proto.RegisterType((*MsgCreateSubscription)(nil), "payments.MsgCreateSubscription")
	proto.RegisterType((*MsgCreateSubscriptionResponse)(nil), "payments.MsgCreateSubscriptionResponse")
	proto.RegisterType((*MsgGrantDiscount)(nil), "payments.MsgGrantDiscount")
	proto.RegisterType((*MsgGrantDiscountResponse)(nil), "payments.MsgGrantDiscountResponse")
	proto.RegisterType((*MsgRevokeDiscount)(nil), "payments.MsgRevokeDiscount")
	proto.RegisterType((*MsgRevokeDiscountResponse)(nil), "payments.MsgRevokeDiscountResponse")
	proto.RegisterType((*MsgEffectPayment)(nil), "payments.MsgEffectPayment")
	proto.RegisterType((*MsgEffectPaymentResponse)(nil), "payments.MsgEffectPaymentResponse")
}

func init() { proto.RegisterFile("payments/tx.proto", fileDescriptor_dc609bb157024200) }

var fileDescriptor_dc609bb157024200 = []byte{
	// 839 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0xcd, 0x6e, 0xeb, 0x44,
	0x14, 0x8e, 0x93, 0x26, 0x24, 0x27, 0xa2, 0x3f, 0xa6, 0x05, 0xd7, 0xa1, 0x49, 0x14, 0x16, 0xa9,
	0xaa, 0xd6, 0x96, 0x0a, 0x0b, 0xd4, 0x5d, 0xdb, 0x20, 0x54, 0xa4, 0x88, 0xc8, 0x85, 0x0d, 0x0b,
	0x22, 0xc7, 0x9e, 0x38, 0xa3, 0x26, 0x1e, 0xcb, 0x33, 0x41, 0xc9, 0x8e, 0x0d, 0x12, 0x1b, 0x24,
	0x76, 0x20, 0xb1, 0xe9, 0x4b, 0xf0, 0x0e, 0x5d, 0x76, 0x07, 0x62, 0x51, 0xa1, 0xf6, 0x19, 0xee,
	0xfe, 0xca, 0xe3, 0xb1, 0x63, 0xa7, 0xf9, 0xd1, 0xed, 0xbd, 0x77, 0x15, 0xcf, 0xf9, 0x9b, 0x6f,
	0xbe, 0xef, 0xcc, 0x99, 0xc0, 0x8e, 0x67, 0x4e, 0x47, 0xc8, 0x65, 0x54, 0x67, 0x13, 0xcd, 0xf3,
	0x09, 0x23, 0x72, 0x31, 0x32, 0xa9, 0xbb, 0x0e, 0x71, 0x08, 0x37, 0xea, 0xc1, 0x57, 0xe8, 0x57,
	0xf7, 0x1d, 0x42, 0x9c, 0x21, 0xd2, 0xf9, 0xaa, 0x37, 0xee, 0xeb, 0xa6, 0x3b, 0x15, 0xae, 0x4f,
	0xe2, 0x6a, 0xd1, 0x47, 0xe8, 0x68, 0xfc, 0x21, 0x41, 0xa3, 0x4d, 0x9d, 0x6b, 0xc4, 0x3a, 0xa1,
	0xe3, 0x92, 0xb8, 0xcc, 0x37, 0x2d, 0x76, 0x3e, 0x66, 0x03, 0xe2, 0x63, 0x6a, 0x32, 0x4c, 0x5c,
	0x59, 0x83, 0x8f, 0x44, 0x62, 0xd7, 0x12, 0x01, 0x5d, 0x6c, 0x2b, 0x52, 0x5d, 0x3a, 0x2c, 0x19,
	0x11, 0xd4, 0x28, 0xf5, 0xca, 0x96, 0x2b, 0x50, 0xf2, 0xcc, 0x29, 0xf2, 0xbb, 0x36, 0xb6, 0x95,
	0x2c, 0x8f, 0x2a, 0x72, 0x43, 0x0b, 0xdb, 0x72, 0x15, 0xc0, 0x14, 0xd5, 0x91, 0xad, 0xe4, 0xea,
	0xd2, 0x61, 0xd1, 0x48, 0x58, 0xce, 0x36, 0xfe, 0xbc, 0xad, 0x65, 0x1a, 0xc7, 0x70, 0xb4, 0x1e,
	0x98, 0x81, 0xa8, 0x47, 0x5c, 0x8a, 0x1a, 0xbf, 0x49, 0xa0, 0xb4, 0xa9, 0x73, 0xe9, 0x23, 0x93,
	0x21, 0x91, 0xf1, 0x1d, 0x1a, 0x79, 0x43, 0x93, 0x21, 0xb9, 0x06, 0x65, 0x2b, 0x70, 0x90, 0x10,
	0x4f, 0x88, 0x1a, 0x84, 0x29, 0x40, 0xf4, 0x0d, 0x6c, 0x47, 0xc7, 0x63, 0x22, 0x89, 0xa3, 0x2e,
	0x9f, 0xee, 0x6b, 0x31, 0x61, 0x73, 0x55, 0x2f, 0x36, 0xee, 0x1e, 0x6a, 0x19, 0x63, 0xcb, 0x4b,
	0x9b, 0x05, 0xfa, 0x06, 0xd4, 0x97, 0xc1, 0x89, 0x31, 0xbf, 0xca, 0x3e, 0xc7, 0x1c, 0x9d, 0x72,
	0x3d, 0xe6, 0x84, 0x24, 0x11, 0xe6, 0x6e, 0x4c, 0xf6, 0xce, 0x1c, 0xaa, 0x2b, 0x7b, 0x99, 0x84,
	0xb9, 0x65, 0x12, 0xee, 0x42, 0x9e, 0x2b, 0xa6, 0x6c, 0xf0, 0x88, 0x70, 0x21, 0x9f, 0x03, 0xf8,
	0xc8, 0xc2, 0x1e, 0x0e, 0x28, 0x51, 0xf2, 0xf5, 0xdc, 0x61, 0xf9, 0xb4, 0x32, 0xe3, 0xa8, 0x85,
	0x29, 0xf3, 0x71, 0x6f, 0x1c, 0x68, 0x73, 0x3d, 0x30, 0xfd, 0x88, 0xa5, 0x44, 0x92, 0xdc, 0x84,
	0x2d, 0xcb, 0x74, 0xbb, 0x36, 0x8a, 0x25, 0x57, 0x0a, 0xbc, 0x07, 0x36, 0x2d, 0xd3, 0x6d, 0xcd,
	0xac, 0x72, 0x07, 0xca, 0x36, 0xa6, 0x16, 0x19, 0xbb, 0x1c, 0xe9, 0x07, 0x01, 0x8e, 0x0b, 0x3d,
	0xa8, 0xf7, 0xdf, 0x43, 0xad, 0xe9, 0x60, 0x36, 0x18, 0xf7, 0x34, 0x8b, 0x8c, 0x74, 0x8b, 0xd0,
	0x11, 0xa1, 0xe2, 0xe7, 0x84, 0xda, 0x37, 0x3a, 0x9b, 0x7a, 0x88, 0x6a, 0xdf, 0x63, 0x97, 0x19,
	0x10, 0xd5, 0xb8, 0xb2, 0x97, 0x6b, 0x13, 0x9d, 0x3b, 0xd6, 0xe6, 0xaf, 0x2c, 0xec, 0xc5, 0x41,
	0xd7, 0xe3, 0x1e, 0xb5, 0x7c, 0xec, 0xf1, 0xab, 0xb0, 0x56, 0x98, 0x26, 0x6c, 0xd1, 0x44, 0xc2,
	0x4c, 0x94, 0xcd, 0xa4, 0xf9, 0x05, 0x8a, 0x74, 0xa0, 0x3c, 0x32, 0x27, 0x5d, 0x0f, 0xf9, 0x98,
	0xd8, 0x34, 0xd4, 0xe5, 0x05, 0x7c, 0x8c, 0xcc, 0x49, 0x27, 0x2c, 0x21, 0x1f, 0x43, 0x21, 0xac,
	0xa6, 0xe4, 0x79, 0xb7, 0xef, 0x6a, 0xe1, 0x08, 0xd1, 0xa2, 0x11, 0xa2, 0x9d, 0xbb, 0x53, 0x43,
	0xc4, 0x9c, 0x15, 0x7f, 0xbd, 0xad, 0x65, 0x38, 0x83, 0x35, 0x38, 0x58, 0x48, 0x4e, 0x4c, 0xdf,
	0x3f, 0x12, 0x6c, 0xb7, 0xa9, 0xf3, 0xb5, 0x6f, 0xba, 0xac, 0x25, 0xf8, 0x97, 0x0f, 0x00, 0x28,
	0x72, 0x6d, 0x94, 0x24, 0xae, 0x14, 0x5a, 0xe6, 0x1a, 0x3a, 0x49, 0x47, 0x76, 0x05, 0x1d, 0xc9,
	0xf6, 0xc8, 0xbd, 0x75, 0x7b, 0xc8, 0x9f, 0x42, 0x29, 0xee, 0x53, 0xd1, 0xf6, 0x33, 0x83, 0x68,
	0x1e, 0x95, 0xdf, 0xd9, 0xd4, 0xc1, 0xe2, 0x53, 0xff, 0x2c, 0xc1, 0x4e, 0x9b, 0x3a, 0x06, 0xfa,
	0x89, 0xdc, 0xa0, 0xf7, 0x75, 0xec, 0x8f, 0xa1, 0x30, 0x20, 0x43, 0x1b, 0xf9, 0xa2, 0x51, 0xc4,
	0x4a, 0xc0, 0xab, 0xc0, 0xfe, 0x33, 0x04, 0x31, 0x3e, 0x87, 0x8b, 0xf2, 0x55, 0xbf, 0x8f, 0xac,
	0x68, 0xaa, 0xbe, 0x63, 0x74, 0x29, 0x92, 0x52, 0x1b, 0x45, 0x20, 0x4e, 0xff, 0xce, 0x43, 0xae,
	0x4d, 0x1d, 0xf9, 0x17, 0x09, 0x6a, 0xeb, 0x9e, 0x9d, 0xe3, 0xd9, 0x64, 0x59, 0xff, 0x16, 0xa8,
	0x5f, 0xbc, 0x49, 0x74, 0x84, 0x47, 0x76, 0x60, 0x6f, 0xf1, 0xab, 0xd1, 0x48, 0x95, 0x5b, 0x18,
	0xa3, 0x1e, 0xad, 0x8f, 0x59, 0xba, 0x51, 0x3c, 0xea, 0x57, 0x6c, 0x14, 0xc5, 0xac, 0xda, 0x68,
	0x7e, 0x76, 0xc9, 0x3f, 0x82, 0xbc, 0x68, 0x6e, 0x2d, 0xa8, 0x90, 0x0c, 0x50, 0x9b, 0x6b, 0x02,
	0xe2, 0xfa, 0xdf, 0xc2, 0x87, 0xe9, 0x8b, 0xad, 0xa6, 0x32, 0x53, 0x3e, 0xb5, 0xb1, 0xdc, 0x17,
	0x17, 0x34, 0x60, 0x73, 0xee, 0xce, 0x54, 0x52, 0x59, 0x69, 0xa7, 0xfa, 0xd9, 0x0a, 0x67, 0x12,
	0x64, 0xba, 0xd1, 0xd3, 0x20, 0x53, 0xbe, 0x39, 0x90, 0x0b, 0xfb, 0xf6, 0xc2, 0xb8, 0x7b, 0xac,
	0x4a, 0xf7, 0x8f, 0x55, 0xe9, 0xff, 0xc7, 0xaa, 0xf4, 0xfb, 0x53, 0x35, 0x73, 0xff, 0x54, 0xcd,
	0xfc, 0xfb, 0x54, 0xcd, 0xfc, 0xf0, 0x65, 0x62, 0xd6, 0xe0, 0x09, 0xe9, 0x93, 0xb1, 0x6b, 0xf3,
	0x1e, 0x0b, 0x56, 0x27, 0xbd, 0x21, 0xb1, 0x6e, 0xac, 0x81, 0x89, 0x5d, 0x7d, 0xa2, 0xcf, 0xfe,
	0xd4, 0x05, 0x13, 0xa8, 0x57, 0xe0, 0x73, 0xf6, 0xf3, 0xd7, 0x01, 0x00, 0x00, 0xff, 0xff, 0x58,
	0x30, 0xbe, 0x97, 0xed, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	SetPaymentContractAuthorisation(ctx context.Context, in *MsgSetPaymentContractAuthorisation, opts ...grpc.CallOption) (*MsgSetPaymentContractAuthorisationResponse, error)
	CreatePaymentTemplate(ctx context.Context, in *MsgCreatePaymentTemplate, opts ...grpc.CallOption) (*MsgCreatePaymentTemplateResponse, error)
	CreatePaymentContract(ctx context.Context, in *MsgCreatePaymentContract, opts ...grpc.CallOption) (*MsgCreatePaymentContractResponse, error)
	CreateSubscription(ctx context.Context, in *MsgCreateSubscription, opts ...grpc.CallOption) (*MsgCreateSubscriptionResponse, error)
	GrantDiscount(ctx context.Context, in *MsgGrantDiscount, opts ...grpc.CallOption) (*MsgGrantDiscountResponse, error)
	RevokeDiscount(ctx context.Context, in *MsgRevokeDiscount, opts ...grpc.CallOption) (*MsgRevokeDiscountResponse, error)
	EffectPayment(ctx context.Context, in *MsgEffectPayment, opts ...grpc.CallOption) (*MsgEffectPaymentResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) SetPaymentContractAuthorisation(ctx context.Context, in *MsgSetPaymentContractAuthorisation, opts ...grpc.CallOption) (*MsgSetPaymentContractAuthorisationResponse, error) {
	out := new(MsgSetPaymentContractAuthorisationResponse)
	err := c.cc.Invoke(ctx, "/payments.Msg/SetPaymentContractAuthorisation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreatePaymentTemplate(ctx context.Context, in *MsgCreatePaymentTemplate, opts ...grpc.CallOption) (*MsgCreatePaymentTemplateResponse, error) {
	out := new(MsgCreatePaymentTemplateResponse)
	err := c.cc.Invoke(ctx, "/payments.Msg/CreatePaymentTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreatePaymentContract(ctx context.Context, in *MsgCreatePaymentContract, opts ...grpc.CallOption) (*MsgCreatePaymentContractResponse, error) {
	out := new(MsgCreatePaymentContractResponse)
	err := c.cc.Invoke(ctx, "/payments.Msg/CreatePaymentContract", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateSubscription(ctx context.Context, in *MsgCreateSubscription, opts ...grpc.CallOption) (*MsgCreateSubscriptionResponse, error) {
	out := new(MsgCreateSubscriptionResponse)
	err := c.cc.Invoke(ctx, "/payments.Msg/CreateSubscription", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) GrantDiscount(ctx context.Context, in *MsgGrantDiscount, opts ...grpc.CallOption) (*MsgGrantDiscountResponse, error) {
	out := new(MsgGrantDiscountResponse)
	err := c.cc.Invoke(ctx, "/payments.Msg/GrantDiscount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RevokeDiscount(ctx context.Context, in *MsgRevokeDiscount, opts ...grpc.CallOption) (*MsgRevokeDiscountResponse, error) {
	out := new(MsgRevokeDiscountResponse)
	err := c.cc.Invoke(ctx, "/payments.Msg/RevokeDiscount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) EffectPayment(ctx context.Context, in *MsgEffectPayment, opts ...grpc.CallOption) (*MsgEffectPaymentResponse, error) {
	out := new(MsgEffectPaymentResponse)
	err := c.cc.Invoke(ctx, "/payments.Msg/EffectPayment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	SetPaymentContractAuthorisation(context.Context, *MsgSetPaymentContractAuthorisation) (*MsgSetPaymentContractAuthorisationResponse, error)
	CreatePaymentTemplate(context.Context, *MsgCreatePaymentTemplate) (*MsgCreatePaymentTemplateResponse, error)
	CreatePaymentContract(context.Context, *MsgCreatePaymentContract) (*MsgCreatePaymentContractResponse, error)
	CreateSubscription(context.Context, *MsgCreateSubscription) (*MsgCreateSubscriptionResponse, error)
	GrantDiscount(context.Context, *MsgGrantDiscount) (*MsgGrantDiscountResponse, error)
	RevokeDiscount(context.Context, *MsgRevokeDiscount) (*MsgRevokeDiscountResponse, error)
	EffectPayment(context.Context, *MsgEffectPayment) (*MsgEffectPaymentResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) SetPaymentContractAuthorisation(ctx context.Context, req *MsgSetPaymentContractAuthorisation) (*MsgSetPaymentContractAuthorisationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetPaymentContractAuthorisation not implemented")
}
func (*UnimplementedMsgServer) CreatePaymentTemplate(ctx context.Context, req *MsgCreatePaymentTemplate) (*MsgCreatePaymentTemplateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePaymentTemplate not implemented")
}
func (*UnimplementedMsgServer) CreatePaymentContract(ctx context.Context, req *MsgCreatePaymentContract) (*MsgCreatePaymentContractResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePaymentContract not implemented")
}
func (*UnimplementedMsgServer) CreateSubscription(ctx context.Context, req *MsgCreateSubscription) (*MsgCreateSubscriptionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSubscription not implemented")
}
func (*UnimplementedMsgServer) GrantDiscount(ctx context.Context, req *MsgGrantDiscount) (*MsgGrantDiscountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GrantDiscount not implemented")
}
func (*UnimplementedMsgServer) RevokeDiscount(ctx context.Context, req *MsgRevokeDiscount) (*MsgRevokeDiscountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RevokeDiscount not implemented")
}
func (*UnimplementedMsgServer) EffectPayment(ctx context.Context, req *MsgEffectPayment) (*MsgEffectPaymentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EffectPayment not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_SetPaymentContractAuthorisation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetPaymentContractAuthorisation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetPaymentContractAuthorisation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payments.Msg/SetPaymentContractAuthorisation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetPaymentContractAuthorisation(ctx, req.(*MsgSetPaymentContractAuthorisation))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreatePaymentTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreatePaymentTemplate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreatePaymentTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payments.Msg/CreatePaymentTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreatePaymentTemplate(ctx, req.(*MsgCreatePaymentTemplate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreatePaymentContract_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreatePaymentContract)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreatePaymentContract(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payments.Msg/CreatePaymentContract",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreatePaymentContract(ctx, req.(*MsgCreatePaymentContract))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateSubscription_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateSubscription)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateSubscription(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payments.Msg/CreateSubscription",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateSubscription(ctx, req.(*MsgCreateSubscription))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_GrantDiscount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgGrantDiscount)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).GrantDiscount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payments.Msg/GrantDiscount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).GrantDiscount(ctx, req.(*MsgGrantDiscount))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RevokeDiscount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRevokeDiscount)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RevokeDiscount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payments.Msg/RevokeDiscount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RevokeDiscount(ctx, req.(*MsgRevokeDiscount))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_EffectPayment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgEffectPayment)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).EffectPayment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/payments.Msg/EffectPayment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).EffectPayment(ctx, req.(*MsgEffectPayment))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "payments.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetPaymentContractAuthorisation",
			Handler:    _Msg_SetPaymentContractAuthorisation_Handler,
		},
		{
			MethodName: "CreatePaymentTemplate",
			Handler:    _Msg_CreatePaymentTemplate_Handler,
		},
		{
			MethodName: "CreatePaymentContract",
			Handler:    _Msg_CreatePaymentContract_Handler,
		},
		{
			MethodName: "CreateSubscription",
			Handler:    _Msg_CreateSubscription_Handler,
		},
		{
			MethodName: "GrantDiscount",
			Handler:    _Msg_GrantDiscount_Handler,
		},
		{
			MethodName: "RevokeDiscount",
			Handler:    _Msg_RevokeDiscount_Handler,
		},
		{
			MethodName: "EffectPayment",
			Handler:    _Msg_EffectPayment_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "payments/tx.proto",
}

func (m *MsgSetPaymentContractAuthorisation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetPaymentContractAuthorisation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetPaymentContractAuthorisation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Authorised {
		i--
		if m.Authorised {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if len(m.PayerDid) > 0 {
		i -= len(m.PayerDid)
		copy(dAtA[i:], m.PayerDid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PayerDid)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.PaymentContractId) > 0 {
		i -= len(m.PaymentContractId)
		copy(dAtA[i:], m.PaymentContractId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PaymentContractId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetPaymentContractAuthorisationResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetPaymentContractAuthorisationResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetPaymentContractAuthorisationResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreatePaymentTemplate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatePaymentTemplate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatePaymentTemplate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.PaymentTemplate.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.CreatorDid) > 0 {
		i -= len(m.CreatorDid)
		copy(dAtA[i:], m.CreatorDid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CreatorDid)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreatePaymentTemplateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatePaymentTemplateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatePaymentTemplateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreatePaymentContract) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatePaymentContract) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatePaymentContract) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.DiscountId.Size()
		i -= size
		if _, err := m.DiscountId.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x3a
	if m.CanDeauthorise {
		i--
		if m.CanDeauthorise {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if len(m.Recipients) > 0 {
		for iNdEx := len(m.Recipients) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Recipients[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if len(m.Payer) > 0 {
		i -= len(m.Payer)
		copy(dAtA[i:], m.Payer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Payer)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.PaymentContractId) > 0 {
		i -= len(m.PaymentContractId)
		copy(dAtA[i:], m.PaymentContractId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PaymentContractId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.PaymentTemplateId) > 0 {
		i -= len(m.PaymentTemplateId)
		copy(dAtA[i:], m.PaymentTemplateId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PaymentTemplateId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.CreatorDid) > 0 {
		i -= len(m.CreatorDid)
		copy(dAtA[i:], m.CreatorDid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CreatorDid)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreatePaymentContractResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatePaymentContractResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatePaymentContractResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateSubscription) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSubscription) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSubscription) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Period != nil {
		{
			size, err := m.Period.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	{
		size := m.MaxPeriods.Size()
		i -= size
		if _, err := m.MaxPeriods.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x22
	if len(m.PaymentContractId) > 0 {
		i -= len(m.PaymentContractId)
		copy(dAtA[i:], m.PaymentContractId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PaymentContractId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.SubscriptionId) > 0 {
		i -= len(m.SubscriptionId)
		copy(dAtA[i:], m.SubscriptionId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SubscriptionId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.CreatorDid) > 0 {
		i -= len(m.CreatorDid)
		copy(dAtA[i:], m.CreatorDid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CreatorDid)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateSubscriptionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSubscriptionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSubscriptionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgGrantDiscount) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGrantDiscount) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGrantDiscount) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Recipient) > 0 {
		i -= len(m.Recipient)
		copy(dAtA[i:], m.Recipient)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Recipient)))
		i--
		dAtA[i] = 0x22
	}
	{
		size := m.DiscountId.Size()
		i -= size
		if _, err := m.DiscountId.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if len(m.PaymentContractId) > 0 {
		i -= len(m.PaymentContractId)
		copy(dAtA[i:], m.PaymentContractId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PaymentContractId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.SenderDid) > 0 {
		i -= len(m.SenderDid)
		copy(dAtA[i:], m.SenderDid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SenderDid)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgGrantDiscountResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGrantDiscountResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGrantDiscountResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRevokeDiscount) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRevokeDiscount) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRevokeDiscount) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Holder) > 0 {
		i -= len(m.Holder)
		copy(dAtA[i:], m.Holder)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Holder)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.PaymentContractId) > 0 {
		i -= len(m.PaymentContractId)
		copy(dAtA[i:], m.PaymentContractId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PaymentContractId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.SenderDid) > 0 {
		i -= len(m.SenderDid)
		copy(dAtA[i:], m.SenderDid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SenderDid)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRevokeDiscountResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRevokeDiscountResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRevokeDiscountResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgEffectPayment) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgEffectPayment) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgEffectPayment) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PaymentContractId) > 0 {
		i -= len(m.PaymentContractId)
		copy(dAtA[i:], m.PaymentContractId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PaymentContractId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.SenderDid) > 0 {
		i -= len(m.SenderDid)
		copy(dAtA[i:], m.SenderDid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SenderDid)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgEffectPaymentResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgEffectPaymentResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgEffectPaymentResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgSetPaymentContractAuthorisation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.PaymentContractId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PayerDid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Authorised {
		n += 2
	}
	return n
}

func (m *MsgSetPaymentContractAuthorisationResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreatePaymentTemplate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.CreatorDid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.PaymentTemplate.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgCreatePaymentTemplateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreatePaymentContract) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.CreatorDid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PaymentTemplateId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PaymentContractId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Payer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Recipients) > 0 {
		for _, e := range m.Recipients {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if m.CanDeauthorise {
		n += 2
	}
	l = m.DiscountId.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgCreatePaymentContractResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateSubscription) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.CreatorDid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SubscriptionId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PaymentContractId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.MaxPeriods.Size()
	n += 1 + l + sovTx(uint64(l))
	if m.Period != nil {
		l = m.Period.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateSubscriptionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgGrantDiscount) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.SenderDid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PaymentContractId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.DiscountId.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.Recipient)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgGrantDiscountResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRevokeDiscount) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.SenderDid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PaymentContractId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Holder)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRevokeDiscountResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgEffectPayment) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.SenderDid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PaymentContractId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgEffectPaymentResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgSetPaymentContractAuthorisation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetPaymentContractAuthorisation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetPaymentContractAuthorisation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PaymentContractId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PaymentContractId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PayerDid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PayerDid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authorised", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Authorised = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetPaymentContractAuthorisationResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetPaymentContractAuthorisationResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetPaymentContractAuthorisationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreatePaymentTemplate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatePaymentTemplate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatePaymentTemplate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatorDid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatorDid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PaymentTemplate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.PaymentTemplate.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreatePaymentTemplateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatePaymentTemplateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatePaymentTemplateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreatePaymentContract) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatePaymentContract: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatePaymentContract: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatorDid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatorDid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PaymentTemplateId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PaymentTemplateId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PaymentContractId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PaymentContractId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Payer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Payer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Recipients", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Recipients = append(m.Recipients, DistributionShare{})
			if err := m.Recipients[len(m.Recipients)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CanDeauthorise", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CanDeauthorise = bool(v != 0)
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DiscountId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.DiscountId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreatePaymentContractResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatePaymentContractResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatePaymentContractResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSubscription) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSubscription: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSubscription: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatorDid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatorDid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SubscriptionId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SubscriptionId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PaymentContractId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PaymentContractId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxPeriods", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.MaxPeriods.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Period", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Period == nil {
				m.Period = &types.Any{}
			}
			if err := m.Period.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSubscriptionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSubscriptionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSubscriptionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGrantDiscount) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGrantDiscount: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGrantDiscount: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderDid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SenderDid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PaymentContractId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PaymentContractId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DiscountId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.DiscountId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Recipient", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Recipient = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGrantDiscountResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGrantDiscountResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGrantDiscountResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRevokeDiscount) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRevokeDiscount: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRevokeDiscount: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderDid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SenderDid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PaymentContractId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PaymentContractId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Holder", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Holder = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRevokeDiscountResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRevokeDiscountResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRevokeDiscountResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgEffectPayment) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgEffectPayment: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgEffectPayment: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderDid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SenderDid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PaymentContractId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PaymentContractId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgEffectPaymentResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgEffectPaymentResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgEffectPaymentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
